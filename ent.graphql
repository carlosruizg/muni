directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreateExpertInput is used for create Expert object.
Input was generated by ent.
"""
input CreateExpertInput {
  name: String!
}
"""
CreateLabellingProjectInput is used for create LabellingProject object.
Input was generated by ent.
"""
input CreateLabellingProjectInput {
  name: String!
  status: LabellingProjectStatus
  description: String
  isPrivate: Boolean
  callbackURL: String
  workersPerTask: Int
}
"""
CreateLabellingTaskInput is used for create LabellingTask object.
Input was generated by ent.
"""
input CreateLabellingTaskInput {
  name: String!
  description: String
  instructions: String!
}
"""
CreateLabellingTaskResponseInput is used for create LabellingTaskResponse object.
Input was generated by ent.
"""
input CreateLabellingTaskResponseInput {
  response: String!
}
"""
CreateQualificationInput is used for create Qualification object.
Input was generated by ent.
"""
input CreateQualificationInput {
  value: QualificationQualificationValue!
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type Expert implements Node {
  id: ID!
  name: String!
}
type LabellingProject implements Node {
  id: ID!
  name: String!
  status: LabellingProjectStatus!
  description: String
  isPrivate: Boolean!
  callbackURL: String
  workersPerTask: Int!
}
"""LabellingProjectStatus is enum for the field status"""
enum LabellingProjectStatus @goModel(model: "github.com/carlosruizg/muni/ent/labellingproject.Status") {
  draft
  running
  cancelled
  completed
}
type LabellingTask implements Node {
  id: ID!
  name: String!
  description: String
  instructions: String!
}
type LabellingTaskResponse implements Node {
  id: ID!
  response: String!
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/carlosruizg/muni/ent.Noder") {
  """The id of the object."""
  id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}
type Qualification implements Node {
  id: ID!
  value: QualificationQualificationValue!
}
"""QualificationQualificationValue is enum for the field value"""
enum QualificationQualificationValue @goModel(model: "github.com/carlosruizg/muni/enums.QualificationValue") {
  CODER
  MEDICAL
  ARTIST
  STEM
}
type Query {
  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node
  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [ID!]!
  ): [Node]!
  experts: [Expert!]!
  labellingProjects: [LabellingProject!]!
  labellingTasks: [LabellingTask!]!
  labellingTaskResponses: [LabellingTaskResponse!]!
  qualifications: [Qualification!]!
}
"""
UpdateExpertInput is used for update Expert object.
Input was generated by ent.
"""
input UpdateExpertInput {
  name: String
}
"""
UpdateLabellingProjectInput is used for update LabellingProject object.
Input was generated by ent.
"""
input UpdateLabellingProjectInput {
  name: String
  status: LabellingProjectStatus
  description: String
  clearDescription: Boolean
  isPrivate: Boolean
  callbackURL: String
  clearCallbackURL: Boolean
  workersPerTask: Int
}
"""
UpdateLabellingTaskInput is used for update LabellingTask object.
Input was generated by ent.
"""
input UpdateLabellingTaskInput {
  name: String
  description: String
  clearDescription: Boolean
  instructions: String
}
"""
UpdateLabellingTaskResponseInput is used for update LabellingTaskResponse object.
Input was generated by ent.
"""
input UpdateLabellingTaskResponseInput {
  response: String
}
"""
UpdateQualificationInput is used for update Qualification object.
Input was generated by ent.
"""
input UpdateQualificationInput {
  value: QualificationQualificationValue
}
