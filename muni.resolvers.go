package muni

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.35

import (
	"context"
	"fmt"

	"github.com/carlosruizg/muni/ent"
)

// CreateExpert is the resolver for the createExpert field.
func (r *mutationResolver) CreateExpert(ctx context.Context, input ent.CreateExpertInput) (*ent.Expert, error) {
	return r.client.Expert.Create().SetInput(input).Save(ctx)
}

// CreateLabellingTask is the resolver for the createLabellingTask field.
func (r *mutationResolver) CreateLabellingTask(ctx context.Context, input ent.CreateLabellingTaskInput) (*ent.LabellingTask, error) {
	panic(fmt.Errorf("not implemented: CreateLabellingTask - createLabellingTask"))
}

// CreateLabellingResponse is the resolver for the createLabellingResponse field.
func (r *mutationResolver) CreateLabellingResponse(ctx context.Context, input ent.CreateLabellingTaskResponseInput) (*ent.LabellingTaskResponse, error) {
	panic(fmt.Errorf("not implemented: CreateLabellingResponse - createLabellingResponse"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
